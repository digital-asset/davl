daml 1.2
module DAVL where

import "davl" DAVL qualified as V3

template EmployeeRole with
    employee: Party
    company: Party
    boss: Party
  where
    signatory [employee, company]

    key employee: Party
    maintainer key

    nonconsuming choice EmployeeRole_RequestVacation: ContractId V3.VacationRequest with
        fromDate: Date
        toDate: Date
      controller employee
      do
        let vacation = V3.Vacation with
              employeeRole = downgradeEmployeeRole this
              fromDate
              toDate
        create V3.VacationRequest with vacation

    nonconsuming choice EmployeeRole_CancelVacationRequest: () with
        requestId: ContractId V3.VacationRequest
      controller employee
      do
        request <- fetch requestId
        assertMsg "Canceling bad vacation request" $ and
          [ employee == request.vacation.employeeRole.employee
          , company == request.vacation.employeeRole.company
          ]
        archive requestId

template EmployeeProposal with
    employeeRole: EmployeeRole
    vacationDays: Int
  where
    let EmployeeRole{..} = employeeRole
    signatory company
    observer employee

    nonconsuming choice EmployeeProposal_Accept: ()
      controller employee
      do
        archive self
        create employeeRole
        create V3.EmployeeVacationAllocation with
          employeeRole = downgradeEmployeeRole employeeRole
          remainingDays = vacationDays
        pure ()

downgradeEmployeeRole: EmployeeRole -> V3.EmployeeRole
downgradeEmployeeRole (EmployeeRole with ..) = V3.EmployeeRole with ..
