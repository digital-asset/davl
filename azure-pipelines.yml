# Enable builds on all branches
trigger:
  # Build every commit as our release process relies on
  # the release process being built alone.
  batch: false
  branches:
    include:
      - master

# Enable PR triggers that target the master branch
pr:
  autoCancel: true # cancel previous builds on push
  branches:
    include:
      - master

jobs:
  - job: build_and_test
    timeoutInMinutes: 120
    pool:
      vmImage: "Ubuntu-16.04"
    steps:
      - checkout: self
      - bash: |
          set -euo pipefail
          DIR=$(pwd)

          # Install stack (not idempotent and we seem to reuse nodes)
          if ! which stack >/dev/null 2>&1; then
              curl -sSL https://get.haskellstack.org/ | sh
          fi

          # Install DAML SDK
          SDK_VERSION=$(cat project/V1/daml.yaml | grep sdk-version | awk '{print $2}')
          curl https://get.daml.com | sh -s $SDK_VERSION

          # Install gRPC
          sudo apt-get install build-essential autoconf libtool pkg-config libgflags-dev libgtest-dev clang-5.0 libc++-dev tree
          cd $(mktemp -d)
          git clone -b v1.23.0 https://github.com/grpc/grpc
          cd grpc
          git submodule update --init
          # Azure sets the SYSTEM variable to "build", which throws off OS
          # detection in the Makefile.
          #
          # Azure uses gcc for its C/C++ compilers by default, whereas grpc
          # officially supports clang. The compilation runs with -Werror, and
          # because gcc and clang apparently disagree on what counts as an
          # unused variable, that makes the build fail with gcc.
          make SYSTEM=Linux CC=clang CXX=clang++
          sudo mkdir /usr/local/grpc
          sudo chown $USER /usr/local/grpc
          make prefix=/usr/local/grpc install

          # Install Haskell DAML Ledger Bindings
          # Done in subshell to limit the reach of dade-assist
          bash -c "
            set -euo
            cd $(mktemp -d)
            git clone -b v$SDK_VERSION https://github.com/digital-asset/daml.git
            cd daml
            ci/dev-env-install.sh
            eval \"\$(dev-env/bin/dade-assist)\"
            language-support/hs/bindings/export-package.sh $DIR/cli
          "

          # Run tests
          cd $DIR
          (cd project/V1; ~/.daml/bin/daml test)
          cd cli
          export PATH="$PATH:~/.daml/bin"
          export LD_LIBRARY_PATH=/usr/local/grpc/lib
          ./test.sh
      - bash: |
          set -euo pipefail
          MESSAGE=$(git log --pretty=format:%s -n1)
          curl -XPOST \
               -i \
               -H 'Content-type: application/json' \
               --data "{\"text\":\"<!here> *FAILED* $(Agent.JobName): <https://dev.azure.com/digitalasset/daml/_build/results?buildId=$(Build.BuildId)|$MESSAGE>\n\"}" \
               $(Slack.URL)
        condition: and(failed(), eq(variables['Build.SourceBranchName'], 'master'))
